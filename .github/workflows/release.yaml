name: Release

on:
  push:
    tags: [ v\d+\.\d+\.\d+\-d\d+ ]
    branches:
      - main

  release:
    types: [ published ]

jobs:

  build-dashboard:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=dashboard_hash::${{ hashFiles('./dashboard/**') }}"

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/cache@v2
        with:
          path: '**/dashboard/node_modules'
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/dashboard/yarn.lock') }}

      - name: Install packages
        run: cd dashboard; yarn

      - name: Build dashboard
        run: cd dashboard; NODE_OPTIONS="--max_old_space_size=4096" yarn build
        env:
          CI: false

      - name: Upload dashboard artifacts
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          aws_s3_endpoint: ${{ secrets.AWS_S3_ENDPOINT }}
          source: './dashboard/build/'
          dest: 's3://mbenxsalha/dashboard/${{ steps.vars.outputs.dashboard_hash }}'
          flags: --recursive

  build-api-server:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=api_server_hash::${{ hashFiles('./api-server/**', './common/**', '**/go.sum', '**go.mod') }}"


      - name: Buildx Cache
        uses: actions/cache@v3
        with:
          path: /tmp/buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/go.sum') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build api-server
        run: make docker-build-api-server

      - name: Move cache
        run: |
          rm -rf /tmp/buildx-cache
          mv /tmp/buildx-cache-new /tmp/buildx-cache

      - name: Upload api-server artifacts
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          aws_s3_endpoint: ${{ secrets.AWS_S3_ENDPOINT }} 
          source: './bin/'
          dest: 's3://mbenxsalha/api-server/${{ steps.vars.outputs.api_server_hash }}'
          flags: --recursive

  release-image:
    runs-on: ubuntu-latest

    needs:
      - build-dashboard
      - build-api-server

    steps:
      - uses: actions/checkout@v3

      - name: Set vars
        id: vars
        run: |
          echo "::set-output name=dashboard_hash::${{ hashFiles('./dashboard/**') }}"
          echo "::set-output name=api_server_hash::${{ hashFiles('./api-server/**', './common/**', '**/go.sum', '**go.mod') }}"

      - name: Download dashboard artifacts
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          aws_s3_endpoint: ${{ secrets.AWS_S3_ENDPOINT }}
          dest: './dashboard/build/'
          source: 's3://mbenxsalha/dashboard/${{ steps.vars.outputs.dashboard_hash }}'
          flags: --recursive

      - name: Download api-server artifacts
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          aws_s3_endpoint: ${{ secrets.AWS_S3_ENDPOINT }}
          dest: './bin/'
          source: 's3://mbenxsalha/api-server/${{ steps.vars.outputs.api_server_hash }}'
          flags: --recursive

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1.8.4
        with:
          images: aminehub/yatai

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: aminehub/yatai:1.1.3.beta
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


concurrency:
  group: yatai-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
